%% Quantify fluorescence overlap

clear
clc

% Specify the full paths and names of two .mat files generated by
% mask_fluorescence_img_LoG.m or mask_fluorescence_img_LoG_batch.m. This
% script will quantify fluorescence overlap between each frame of the two
% corresponding image stacks.
filename1 = '/home/joshscurll/Documents/MATLAB/Research/Madison/Madison_test_processed.mat';
filename2 = '/home/joshscurll/Documents/MATLAB/Research/Madison/Madison_test_processed.mat';

% Save results to MAT-file?
save_results = true; % true or 1 to save, false or 0 to not save

% Folder where to save results
save_folder = '/home/joshscurll/Documents/MATLAB/Research/Madison/';

% Filename (without extension) to save results to
save_fname = 'test_coloc_results';

%% %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

load(filename1);
IMG1 = double(IMG);
mask1 = mask > 0;
medf1 = medf;
if exist('medf_corrected','var')
    medf_corrected1 = medf_corrected;
else
    medf_corrected1 = medf1;
end
x1 = x;

clearvars -except *1 *2 save_results save_folder save_fname

load(filename2);
IMG2 = double(IMG);
mask2 = mask > 0;
medf2 = medf;
if exist('medf_corrected','var')
    medf_corrected2 = medf_corrected;
else
    medf_corrected2 = medf2;
end
x2 = x;

clearvars -except *1 *2 x save_results save_folder save_fname

% Check that both image stacks have the same no. of frames
if length(x1) ~= length(x2)
    error('Image stacks have different numbers of frames.')
else
    % Normalize image stacks to have the same median of per-frame median
    % fluorescence intensities
    r = median(medf_corrected1) / median(medf_corrected2);
    if r < 1
        IMG2 = r * IMG2;
    else
        IMG1 = IMG1 ./ r;
    end
    
    %% Quantify fluorescence overlap
    P = IMG1.*IMG2;
    % Simple product
    Product = sum(sum(P,2),1);
    Product = reshape(Product,length(Product),1);
    
    PCC = zeros(length(x),1);
    MOC = zeros(length(x),1);
    MOC_area = zeros(length(x),1);
    M1 = zeros(length(x),1);
    M2 = zeros(length(x),1);
    M1_area = zeros(length(x),1);
    M2_area = zeros(length(x),1);
    Jaccard_fluorescence = zeros(length(x),1);
    Jaccard_area = zeros(length(x),1);
    for i = 1:length(x)
        R = IMG1(:,:,i); R = R(:);
        G = IMG2(:,:,i); G = G(:);
        Rmask = mask1(:,:,i); Rmask = Rmask(:);
        Gmask = mask2(:,:,i); Gmask = Gmask(:);
        overlap_mask = Rmask & Gmask;
        % Pearson's correlation coefficient (PCC)
        Rmm = R - mean(R); Gmm = G - mean(G);
        PCC(i)  = sum(sum(Rmm.*Gmm))/sqrt(sum(sum(Rmm.^2))*sum(sum(Gmm.^2)));
        % Manders' Overlap Coefficient (MOC)
        MOC(i) = sum(R.*G) / sqrt( sum(R.*R) * sum(G.*G) );
        % MOC applied to mask area
        MOC_area(i) = sum(overlap_mask) / sqrt( sum(Rmask) * sum(Gmask) );
        % Manders' Colocalization Coefficients (M1 and M2)
        M1(i) = sum(R(G>0))/sum(R);
        M2(i) = sum(G(R>0))/sum(G);
        % Manders' M1 and M2 applied to mask area
        M1_area(i) = sum(overlap_mask)/sum(Rmask);
        M2_area(i) = sum(overlap_mask)/sum(Gmask);
        % Jaccard Index on fluorescence
        Jaccard_fluorescence(i) = sum((R+G).*overlap_mask) / sum(R+G);
        % Jaccard Index on mask area
        Jaccard_area(i) = sum(overlap_mask) / sum(R>0 | G>0);
    end
    
    if save_results
        save(fullfile(save_folder,[save_fname,'.mat']), ...
            'Product', 'PCC', 'M1', 'M2', 'MOC', 'Jaccard_fluorescence', ...
            'M1_area', 'M2_area', 'MOC_area', 'Jaccard_area');
    end
end
